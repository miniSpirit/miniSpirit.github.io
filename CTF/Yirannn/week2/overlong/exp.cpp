#include <cstdio>
#define _BYTE  uint8
#define __int8 char
#define LOBYTE(x)   (*((_BYTE*)&(x)))
typedef unsigned char   uint8;
char str[] = {
0x0E0, 0x81, 0x89, 0x0C0, 0x0A0, 0x0C1, 0x0AE, 0x0E0, 0x81, 0x0A5, 0x0C1, 0x0B6, 0x0F0, 0x80, 0x81, 0x0A5, 0x0E0, 0x81,
0x0B2, 0x0F0, 0x80, 0x80, 0x0A0, 0x0E0, 0x81, 0x0A2, 0x72, 0x6F, 0x0C1, 0x0AB, 0x65, 0x0E0, 0x80, 0x0A0, 0x0E0, 0x81,
0x0B4, 0x0E0, 0x81, 0x0A8, 0x0C1, 0x0A5, 0x20, 0x0C1, 0x0A5, 0x0E0, 0x81, 0x0AE, 0x63, 0x0C1, 0x0AF, 0x0E0, 0x81, 0x0A4,
0x0F0, 0x80, 0x81, 0x0A9, 0x6E, 0x0C1, 0x0A7, 0x0C0, 0x0BA, 0x20, 0x49, 0x0F0, 0x80, 0x81, 0x9F, 0x0C1, 0x0A1, 0x0C1,
0x9F, 0x0C1, 0x8D, 0x0E0, 0x81, 0x9F, 0x0C1, 0x0B4, 0x0F0, 0x80, 0x81, 0x9F, 0x0F0, 0x80, 0x81, 0x0A8, 0x0C1, 0x9F,
0x0F0, 0x80, 0x81, 0x0A5, 0x0E0, 0x81, 0x9F, 0x0C1, 0x0A5, 0x0E0, 0x81, 0x9F, 0x0F0, 0x80, 0x81, 0x0AE, 0x0C1, 0x9F, 0x0F0, 0x80, 0x81, 0x83, 0x0C1, 0x9F, 0x0E0,
0x81, 0x0AF, 0x0E0, 0x81, 0x9F, 0x0C1, 0x84, 0x5F, 0x0E0, 0x81, 0x0A9, 0x0F0, 0x80, 0x81, 0x9F, 0x6E, 0x0E0, 0x81, 0x9F, 0x0E0, 0x81, 0x0A7, 0x0E0, 0x81, 0x80, 0x0F0, 0x80, 0x81, 0x0A6, 0x0F0, 0x80, 0x81,
0x0AC, 0x0E0, 0x81, 0x0A1, 0x0C1, 0x0B2, 0x0C1, 0x0A5, 0x0F0, 0x80, 0x80, 0x0AD, 0x0F0, 0x80, 0x81, 0x0AF, 0x6E, 0x0C0, 0x0AE, 0x0F0, 0x80, 0x81, 0x0A3, 0x6F, 0x0F0, 0x80, 0x81, 0x0AD
};
signed int sub_401000(_BYTE *a1, unsigned __int8 *a2)
{
  signed int v3; // [esp+0h] [ebp-8h]
  int v4; // [esp+4h] [ebp-4h]

  if ( (signed int)*a2 >> 3 == 30 )
  {
    v4 = a2[3] & 0x3F | ((a2[2] & 0x3F) << 6) | ((a2[1] & 0x3F) << 12) | ((*a2 & 7) << 18);
    v3 = 4;
  }
  else if ( (signed int)*a2 >> 4 == 14 )
  {
    v4 = a2[2] & 0x3F | ((a2[1] & 0x3F) << 6) | ((*a2 & 0xF) << 12);
    v3 = 3;
  }
  else if ( (signed int)*a2 >> 5 == 6 )
  {
    v4 = a2[1] & 0x3F | ((*a2 & 0x1F) << 6);
    v3 = 2;
  }
  else
  {
    LOBYTE(v4) = *a2;
    v3 = 1;
  }
  *a1 = v4;
  return v3;
}
unsigned int sub_401160(char *text, char *aStr, unsigned int a0x1c)
{
  int v3; // ST08_4
  unsigned int i; // [esp+4h] [ebp-4h]

  for ( i = 0; i < a0x1c; ++i )
  {
    aStr += sub_401000((_BYTE*)text, (unsigned __int8 *)aStr);
    v3 = *text++;
    if ( !v3 )
      break;
  }
  return i;
}
int main()
{
  unsigned int v4; // eax
  char Text[128]; // [esp+0h] [ebp-84h]
  unsigned int v7; // [esp+80h] [ebp-4h]

    v4 = sub_401160(Text, str, 0xFFFFFFAF);
    v7 = v4;
    Text[v4] = 0;
    puts(Text);
    return 0;
}